export default {
    "-day": "-day",
    "-hour": "-hour",
    "2FA Settings": "2FA Settings",
    "A list of Notification Services can be found in Home Assistant under \"Developer Tools > Services\" search for \"notification\" to find your device/phone name.": "A list of Notification Services can be found in Home Assistant under \"Developer Tools > Services\" search for \"notification\" to find your device/phone name.",
    "API Key": "API Key",
    "API Username": "API Username",
    "Accept characters:": "Accept characters:",
    "Accepted Status Codes": "Accepted Status Codes",
    "Access Token": "Access Token",
    "Add Group": "Add Group",
    "Add New Monitor": "Add New Monitor",
    "Add New Status Page": "Add New Status Page",
    "Add New below or Select...": "Add New below or Select...",
    "Add a monitor": "Add a monitor",
    "Add one": "Add one",
    "All Systems Operational": "All Systems Operational",
    "Allow indexing": "Allow indexing",
    "Also check beta release": "Also check beta release",
    "Application Token": "Application Token",
    "Apply on all existing monitors": "Apply on all existing monitors",
    "Apprise URL": "Apprise URL",
    "Auto Get": "Auto Get",
    "Auto resolve or acknowledged": "Auto resolve or acknowledged",
    "Automations can optionally be triggered in Home Assistant:": "Automations can optionally be triggered in Home Assistant:",
    "Avg. Ping": "Avg. Ping",
    "Avg. Response": "Avg. Response",
    "Bark Endpoint": "Bark Endpoint",
    "Bark Group": "Bark Group",
    "Bark Sound": "Bark Sound",
    "Base URL": "Base URL",
    "Basic Settings": "Basic Settings",
    "Bot Display Name": "Bot Display Name",
    "Bot Token": "Bot Token",
    "Cert Exp.": "Cert Exp.",
    "Certificate Chain": "Certificate Chain",
    "Certificate Expiry Notification": "Certificate Expiry Notification",
    "Certificate Info": "Certificate Info",
    "Change Password": "Change Password",
    "Channel Name": "Channel Name",
    "Channel access token": "Channel access token",
    "Chat ID": "Chat ID",
    "Check Update On GitHub": "Check Update On GitHub",
    "Check how to config it for WebSocket": "Check how to config it for WebSocket",
    "Check octopush prices": "Check octopush prices {0}.",
    "Clear Data": "Clear Data",
    "Clear all statistics": "Clear all Statistics",
    "Coming Soon": "Coming Soon",
    "Connection String": "Connection String",
    "Connection Type": "Connection Type",
    "Container Name / ID": "Container Name / ID",
    "Content Type": "Content Type",
    "Create Incident": "Create Incident",
    "Create your admin account": "Create your admin account",
    "Current Password": "Current Password",
    "Current User": "Current User",
    "Custom CSS": "Custom CSS",
    "Custom Footer": "Custom Footer",
    "Date Created": "Date Created",
    "Days Remaining:": "Days Remaining:",
    "Default enabled": "Default enabled",
    "Degraded Service": "Degraded Service",
    "Device Token": "Device Token",
    "Disable 2FA": "Disable 2FA",
    "Disable Auth": "Disable Auth",
    "Discord Webhook URL": "Discord Webhook URL",
    "Discourage search engines from indexing site": "Discourage search engines from indexing site",
    "Docker Container": "Docker Container",
    "Docker Daemon": "Docker Daemon",
    "Docker Host": "Docker Host",
    "Docker Hosts": "Docker Hosts",
    "Domain Name Expiry Notification": "Domain Name Expiry Notification",
    "Domain Names": "Domain Names",
    "Don't know how to get the token? Please read the guide:": "Don't know how to get the token? Please read the guide:",
    "Edit Status Page": "Edit Status Page",
    "Enable 2FA": "Enable 2FA",
    "Enable Auth": "Enable Auth",
    "Entry Page": "Entry Page",
    "Event data:": "Event data:",
    "Event type:": "Event type:",
    "Example:": "Example: {0}",
    "Export Backup": "Export Backup",
    "Feishu WebHookUrl": "Feishu WebHookURL",
    "Fingerprint:": "Fingerprint:",
    "Footer Text": "Footer Text",
    "For example: nginx, Apache and Traefik.": "For example: nginx, Apache and Traefik.",
    "For safety, must use secret key": "For safety, must use secret key",
    "Friendly Name": "Friendly Name",
    "From Email": "From Email",
    "From Name/Number": "From Name/Number",
    "Frontend Version do not match backend version!": "Frontend Version do not match backend version!",
    "Frontend Version": "Frontend Version",
    "Go back to the previous page.": "Go back to the previous page.",
    "Go to Dashboard": "Go to Dashboard",
    "HTTP Basic Auth": "HTTP Basic Auth",
    "HTTP Headers": "HTTP Headers",
    "HTTP Options": "HTTP Options",
    "Heartbeat Interval": "Heartbeat Interval",
    "Heartbeat Retry Interval": "Heartbeat Retry Interval",
    "Hello @everyone is...": "Hello {'@'}everyone is...",
    "Hide Tags": "Hide Tags",
    "Home Assistant URL": "Home Assistant URL",
    "I understand, please disable": "I understand, please disable",
    "Icon Emoji": "Icon Emoji",
    "Icon URL": "Icon URL",
    "Ignore TLS Error": "Ignore TLS Error",
    "Import Backup": "Import Backup",
    "Integration Key": "Integration Key",
    "Integration URL": "Integration URL",
    "Internal Room Id": "Internal Room ID",
    "Issuer:": "Issuer:",
    "Keep both": "Keep both",
    "Last Result": "Last Result",
    "Last Updated": "Last Updated",
    "Leave blank to use a shared sender number.": "Leave blank to use a shared sender number.",
    "Legacy Octopush-DM": "Legacy Octopush-DM",
    "Line Developers Console": "Line Developers Console",
    "Long-Lived Access Token can be created by clicking on your profile name (bottom left) and scrolling to the bottom then click Create Token. ": "Long-Lived Access Token can be created by clicking on your profile name (bottom left) and scrolling to the bottom then click Create Token. ",
    "Long-Lived Access Token": "Long-Lived Access Token",
    "LunaSea Device ID": "LunaSea Device ID",
    "Max. Redirects": "Max. Redirects",
    "Message Title": "Message Title",
    "Message:": "Message:",
    "Messaging API": "Messaging API",
    "Monitor History": "Monitor History",
    "Monitor Type": "Monitor Type",
    "More info on:": "More info on: {0}",
    "Most likely causes:": "Most likely causes:",
    "New Password": "New Password",
    "New Status Page": "New Status Page",
    "New Update": "New Update",
    "No Monitors": "No Monitors",
    "No Monitors, please": "No Monitors, please",
    "No Proxy": "No Proxy",
    "No Services": "No Services",
    "No consecutive dashes": "No consecutive dashes",
    "No important events": "No important events",
    "No monitors available.": "No monitors available.",
    "No status pages": "No status pages",
    "Not available, please setup.": "Not available, please setup.",
    "Not installed": "Not installed",
    "Not running": "Not running",
    "Notification Service": "Notification Service",
    "Notification Sound": "Notification Sound",
    "Notification Type": "Notification Type",
    "Octopush API Version": "Octopush API Version",
    "One record": "One record",
    "Other Software": "Other Software",
    "Page Not Found": "Page Not Found",
    "Partially Degraded Service": "Partially Degraded Service",
    "Pick Accepted Status Codes...": "Pick Accepted Status Codes...",
    "Pick a RR-Type...": "Pick a RR-Type...",
    "Please input title and content": "Please input title and content",
    "Please read": "Please read",
    "Please use this option carefully!": "Please use this option carefully!",
    "Post URL": "Post URL",
    "Powered by": "Powered by",
    "Prefix Custom Message": "Prefix Custom Message",
    "Primary Base URL": "Primary Base URL",
    "Proxy Protocol": "Proxy Protocol",
    "Proxy Server": "Proxy Server",
    "Proxy server has authentication": "Proxy server has authentication",
    "Push URL": "Push URL",
    "PushDeer Key": "PushDeer Key",
    "Quick Stats": "Quick Stats",
    "Read more": "Read more",
    "Read more:": "Read more: {0}",
    "Recipient Number": "Recipient Number",
    "Remember me": "Remember me",
    "Remove Token": "Remove Token",
    "Repeat New Password": "Repeat New Password",
    "Repeat Password": "Repeat Password",
    "Resend Notification if Down X times consequently": "Resend Notification if Down X times consequently",
    "Resolver Server": "Resolver Server",
    "Resource Record Type": "Resource Record Type",
    "Retype the address.": "Retype the address.",
    "Reverse Proxy": "Reverse Proxy",
    "SMS Type": "SMS Type",
    "Search Engine Visibility": "Search Engine Visibility",
    "Search...": "Search...",
    "Server URL": "Server URL",
    "Setup 2FA": "Setup 2FA",
    "Setup Docker Host": "Setup Docker Host",
    "Setup Notification": "Setup Notification",
    "Setup Proxy": "Setup Proxy",
    "Show Powered By": "Show Powered By",
    "Show Tags": "Show Tags",
    "Show URI": "Show URI",
    "Show update if available": "Show update if available",
    "Shrink Database": "Shrink Database",
    "Skip existing": "Skip existing",
    "Sms template must contain parameters: ": "Sms template must contain parameters: ",
    "Status Page": "Status Page",
    "Status Pages": "Status Pages",
    "Status:": "Status: {0}",
    "Steam API Key": "Steam API Key",
    "Steam Game Server": "Steam Game Server",
    "Subject:": "Subject:",
    "Switch to Dark Theme": "Switch to Dark Theme",
    "Switch to Light Theme": "Switch to Light Theme",
    "Tag with this name already exist.": "Tag with this name already exists.",
    "Tag with this value already exist.": "Tag with this value already exists.",
    "The current connection may be lost if you are currently connecting via Cloudflare Tunnel. Are you sure want to stop it? Type your current password to confirm it.": "The current connection may be lost if you are currently connecting via Cloudflare Tunnel. Are you sure want to stop it? Type your current password to confirm it.",
    "The resource is no longer available.": "The resource is no longer available.",
    "The slug is already taken. Please choose another slug.": "The slug is already taken. Please choose another slug.",
    "Theme - Heartbeat Bar": "Theme - Heartbeat Bar",
    "Then choose an action, for example switch the scene to where an RGB light is red.": "Then choose an action, for example switch the scene to where an RGB light is red.",
    "There might be a typing error in the address.": "There might be a typing error in the address.",
    "To Email": "To Email",
    "Trigger type:": "Trigger type:",
    "Trust Proxy": "Trust Proxy",
    "Two Factor Authentication": "Two Factor Authentication",
    "Untitled Group": "Untitled Group",
    "Update Password": "Update Password",
    "Upside Down Mode": "Upside Down Mode",
    "Uptime Kuma URL": "Uptime Kuma URL",
    "Uptime Kuma": "Uptime Kuma",
    "User ID": "User ID",
    "User Key": "User Key",
    "Using a Reverse Proxy?": "Using a Reverse Proxy?",
    "Valid To:": "Valid To:",
    "Verify Token": "Verify Token",
    "WeCom Bot Key": "WeCom Bot Key",
    "Webhook URL": "Webhook URL",
    "What you can try:": "What you can try:",
    "YOUR BOT TOKEN HERE": "YOUR BOT TOKEN HERE",
    "add one": "add one",
    "auto acknowledged": "auto acknowledged",
    "auto resolve": "auto resolve",
    "default: notify all devices": "default: notify all devices",
    "disableauth.message1": "Are you sure want to <strong>disable authentication</strong>?",
    "disableauth.message2": "It is designed for scenarios <strong>where you intend to implement third-party authentication</strong> in front of Uptime Kuma such as Cloudflare Access, Authelia or other authentication mechanisms.",
    "do nothing": "do nothing",
    "ntfy Topic": "ntfy Topic",
    "pushoversounds alien": "Alien Alarm (long)",
    "pushoversounds bike": "Bike",
    "pushoversounds bugle": "Bugle",
    "pushoversounds cashregister": "Cash Register",
    "pushoversounds classical": "Classical",
    "pushoversounds climb": "Climb (long)",
    "pushoversounds cosmic": "Cosmic",
    "pushoversounds echo": "Pushover Echo (long)",
    "pushoversounds falling": "Falling",
    "pushoversounds gamelan": "Gamelan",
    "pushoversounds incoming": "Incoming",
    "pushoversounds intermission": "Intermission",
    "pushoversounds magic": "Magic",
    "pushoversounds mechanical": "Mechanical",
    "pushoversounds none": "None (silent)",
    "pushoversounds persistent": "Persistent (long)",
    "pushoversounds pianobar": "Piano Bar",
    "pushoversounds pushover": "Pushover (default)",
    "pushoversounds siren": "Siren",
    "pushoversounds spacealarm": "Space Alarm",
    "pushoversounds tugboat": "Tug Boat",
    "pushoversounds updown": "Up Down (long)",
    "pushoversounds vibrate": "Vibrate Only",
    "rocket.chat": "Rocket.Chat",
    "value (optional)": "value (optional)",
    About: "About",
    AccessKeyId: "AccessKey ID",
    Active: "Active",
    Add: "Add",
    Advanced: "Advanced",
    Android: "Android",
    Appearance: "Appearance",
    Authentication: "Authentication",
    Auto: "Auto",
    Backup: "Backup",
    Blue: "Blue",
    Body: "Body",
    BodyInvalidFormat: "The request body is not valid JSON: ",
    Bottom: "Bottom",
    Cancel: "Cancel",
    Confirm: "Confirm",
    Content: "Content",
    Create: "Create",
    Created: "Created",
    Current: "Current",
    Customize: "Customize",
    Dark: "Dark",
    Dashboard: "Dashboard",
    DateTime: "DateTime",
    Default: "Default",
    Delete: "Delete",
    Description: "Description",
    Device: "Device",
    Discard: "Discard",
    Domain: "Domain",
    Done: "Done",
    Down: "Down",
    Edit: "Edit",
    Email: "Email",
    Events: "Events",
    Examples: "Examples",
    Export: "Export",
    General: "General",
    GoogleChat: "Google Chat (Google Workspace only)",
    Gray: "Gray",
    Green: "Green",
    Headers: "Headers",
    HeadersInvalidFormat: "The request headers are not valid JSON: ",
    Heartbeats: "Heartbeats",
    High: "High",
    HomeAssistant: "Home Assistant",
    Hostname: "Hostname",
    Huawei: "Huawei",
    Import: "Import",
    Inactive: "Inactive",
    Indigo: "Indigo",
    Info: "Info",
    Installed: "Installed",
    Invalid: "Invalid",
    Keyword: "Keyword",
    Language: "Language",
    Leave: "Leave",
    Light: "Light",
    List: "List",
    Login: "Login",
    Logout: "Logout",
    Message: "Message",
    Method: "Method",
    Name: "Name",
    Next: "Next",
    No: "No",
    None: "None",
    Normal: "Normal",
    Notifications: "Notifications",
    Number: "Number",
    Options: "Options",
    Orange: "Orange",
    Overwrite: "Overwrite",
    Password: "Password",
    PasswordsDoNotMatch: "Passwords do not match.",
    Pause: "Pause",
    Pending: "Pending",
    PhoneNumbers: "PhoneNumbers",
    Ping: "Ping",
    Pink: "Pink",
    Platform: "Platform",
    Port: "Port",
    Post: "Post",
    Priority: "Priority",
    Proxies: "Proxies",
    Proxy: "Proxy",
    Purple: "Purple",
    PushByTechulus: "Push by Techulus",
    PushUrl: "Push URL",
    Query: "Query",
    RadiusCalledStationId: "Called Station Id",
    RadiusCalledStationIdDescription: "Identifier of the called device",
    RadiusCallingStationId: "Calling Station Id",
    RadiusCallingStationIdDescription: "Identifier of the calling device",
    RadiusSecret: "Radius Secret",
    RadiusSecretDescription: "Shared Secret between client and server",
    Recipients: "Recipients",
    Red: "Red",
    Required: "Required",
    Response: "Response",
    Resume: "Resume",
    Retries: "Retries",
    Retry: "Retry",
    Running: "Running",
    Save: "Save",
    SecretAccessKey: "AccessKey Secret",
    SecretKey: "SecretKey",
    Security: "Security",
    Services: "Services",
    Settings: "Settings",
    SignName: "SignName",
    Slug: "Slug",
    Start: "Start",
    Status: "Status",
    Stop: "Stop",
    Style: "Style",
    Tags: "Tags",
    TemplateCode: "TemplateCode",
    Test: "Test",
    Theme: "Theme",
    Timezone: "Timezone",
    Title: "Title",
    Token: "Token",
    Topic: "Topic",
    URL: "URL",
    Unknown: "Unknown",
    Unpin: "Unpin",
    Up: "Up",
    Uptime: "Uptime",
    User: "User",
    Username: "Username",
    Valid: "Valid",
    Version: "Version",
    WebHookUrl: "WebHookUrl",
    Workstation: "Workstation",
    Yes: "Yes",
    aboutChannelName: "Enter the channel name on {0} Channel Name field if you want to bypass the Webhook channel. Ex: #other-channel",
    aboutIconURL: "You can provide a link to a picture in \"Icon URL\" to override the default profile picture. Will not be used if Icon Emoji is set.",
    aboutKumaURL: "If you leave the Uptime Kuma URL field blank, it will default to the Project GitHub page.",
    aboutMattermostChannelName: "You can override the default channel that the Webhook posts to by entering the channel name into \"Channel Name\" field. This needs to be enabled in the Mattermost Webhook settings. Ex: #other-channel",
    aboutWebhooks: "More info about Webhooks on: {0}",
    acceptedStatusCodesDescription: "Select status codes which are considered as a successful response.",
    alertNoFile: "Please select a file to import.",
    alertWrongFileType: "Please select a JSON file.",
    alerta: "Alerta",
    alertaAlertState: "Alert State",
    alertaApiEndpoint: "API Endpoint",
    alertaApiKey: "API Key",
    alertaEnvironment: "Environment",
    alertaRecoverState: "Recover State",
    apiCredentials: "API credentials",
    apprise: "Apprise (Support 50+ Notification services)",
    appriseInstalled: "Apprise is installed.",
    appriseNotInstalled: "Apprise is not installed. {0}",
    backupDescription2: "Note: history and event data is not included.",
    backupDescription3: "Sensitive data such as notification tokens are included in the export file; please store export securely.",
    backupDescription: "You can backup all monitors and notifications into a JSON file.",
    backupOutdatedWarning: "Deprecated: Since a lot of features added and this backup feature is a bit unmaintained, it cannot generate or restore a complete backup.",
    backupRecommend: "Please backup the volume or the data folder (./data/) directly instead.",
    certificationExpiryDescription: "HTTPS Monitors trigger notification when TLS certificate expires in:",
    chatIDNotFound: "Chat ID is not found; please send a message to this bot first",
    checkEverySecond: "Check every {0} seconds",
    checkPrice: "Check {0} prices:",
    clearDataOlderThan: "Keep monitor history data for {0} days.",
    clearEventsMsg: "Are you sure want to delete all events for this monitor?",
    clearHeartbeatsMsg: "Are you sure want to delete all heartbeats for this monitor?",
    clicksendsms: "ClickSend SMS",
    cloudflareWebsite: "Cloudflare Website",
    color: "color",
    confirmClearStatisticsMsg: "Are you sure you want to delete ALL statistics?",
    confirmDisableTwoFAMsg: "Are you sure you want to disable 2FA?",
    confirmEnableTwoFAMsg: "Are you sure you want to enable 2FA?",
    confirmImportMsg: "Are you sure you want to import the backup? Please verify you've selected the correct import option.",
    critical: "critical",
    danger: "danger",
    dark: "dark",
    day: "day | days",
    default: "Default",
    defaultNotificationName: "My {notification} Alert ({number})",
    deleteDockerHostMsg: "Are you sure want to delete this docker host for all monitors?",
    deleteMonitorMsg: "Are you sure want to delete this monitor?",
    deleteNotificationMsg: "Are you sure want to delete this notification for all monitors?",
    deleteProxyMsg: "Are you sure want to delete this proxy for all monitors?",
    deleteStatusPageMsg: "Are you sure want to delete this status page?",
    disableCloudflaredNoAuthMsg: "You are in No Auth mode, a password is not required.",
    discord: "Discord",
    dnsPortDescription: "DNS server port. Defaults to 53. You can change the port at any time.",
    documentation: "documentation",
    emailCustomSubject: "Custom Subject",
    emojiCheatSheet: "Emoji cheat sheet: {0}",
    enableDefaultNotificationDescription: "This notification will be enabled by default for new monitors. You can still disable the notification separately for each monitor.",
    enableProxyDescription: "This proxy will not effect on monitor requests until it is activated. You can control temporarily disable the proxy from all monitors by activation status.",
    enabled: "Enabled",
    endpoint: "endpoint",
    error: "error",
    goAlert: "GoAlert",
    goAlertInfo: "GoAlert is a An open source application for on-call scheduling, automated escalations and notifications (like SMS or voice calls). Automatically engage the right person, the right way, and at the right time! {0}",
    goAlertIntegrationKeyInfo: "Get generic API integration key for the service in this format \"aaaaaaaa-bbbb-cccc-dddd-eeeeeeeeeeee\" usually the value of token parameter of copied URL.",
    gorush: "Gorush",
    gotify: "Gotify",
    here: "here",
    hour: "hour",
    iOS: "iOS",
    ignoreTLSError: "Ignore TLS/SSL error for HTTPS websites",
    importHandleDescription: "Choose 'Skip existing' if you want to skip every monitor or notification with the same name. 'Overwrite' will delete every existing monitor and notification.",
    info: "info",
    keywordDescription: "Search keyword in plain HTML or JSON response. The search is case-sensitive.",
    languageName: "English",
    light: "light",
    line: "Line Messenger",
    lineDevConsoleTo: "Line Developers Console - {0}",
    lunasea: "LunaSea",
    matrix: "Matrix",
    matrixDesc1: "You can find the internal room ID by looking in the advanced section of the room settings in your Matrix client. It should look like !QMdRCpUIfLwsfjxye6:home.server.",
    matrixDesc2: "It is highly recommended you create a new user and do not use your own Matrix user's access token as it will allow full access to your account and all the rooms you joined. Instead, create a new user and only invite it to the room that you want to receive the notification in. You can get the access token by running {0}",
    matrixHomeserverURL: "Homeserver URL (with http(s):// and optionally port)",
    mattermost: "Mattermost",
    maxRedirectDescription: "Maximum number of redirects to follow. Set to 0 to disable redirects.",
    needPushEvery: "You should call this URL every {0} seconds.",
    needSignalAPI: "You need to have a signal client with REST API.",
    notAvailableShort: "N/A",
    notificationDescription: "Notifications must be assigned to a monitor to function.",
    octopush: "Octopush",
    octopushAPIKey: "\"API key\" from HTTP API credentials in control panel",
    octopushLegacyHint: "Do you use the legacy version of Octopush (2011-2020) or the new version?",
    octopushLogin: "\"Login\" from HTTP API credentials in control panel",
    octopushPhoneNumber: "Phone number (intl format, eg : +33612345678) ",
    octopushSMSSender: "SMS Sender Name : 3-11 alphanumeric characters and space (a-zA-Z0-9)",
    octopushTypeLowCost: "Low Cost (Slow - sometimes blocked by operator)",
    octopushTypePremium: "Premium (Fast - recommended for alerting)",
    onebotGroupMessage: "Group",
    onebotHttpAddress: "OneBot HTTP Address",
    onebotMessageType: "OneBot Message Type",
    onebotPrivateMessage: "Private",
    onebotSafetyTips: "For safety, must set access token",
    onebotUserOrGroupId: "Group/User ID",
    passwordNotMatchMsg: "The repeat password does not match.",
    pauseDashboardHome: "Pause",
    pauseMonitorMsg: "Are you sure want to pause?",
    primary: "primary",
    promosms: "PromoSMS",
    promosmsLogin: "API Login Name",
    promosmsPassword: "API Password",
    promosmsPhoneNumber: "Phone number (for Polish recipient You can skip area codes)",
    promosmsSMSSender: "SMS Sender Name : Pre-registred name or one of defaults: InfoSMS, SMS Info, MaxSMS, INFO, SMS",
    promosmsTypeEco: "SMS ECO - cheap but slow and often overloaded. Limited only to Polish recipients.",
    promosmsTypeFlash: "SMS FLASH - Message will automatically show on recipient device. Limited only to Polish recipients.",
    promosmsTypeFull: "SMS FULL - Premium tier of SMS, You can use your Sender Name (You need to register name first). Reliable for alerts.",
    promosmsTypeSpeed: "SMS SPEED - Highest priority in system. Very quick and reliable but costly (about twice of SMS FULL price).",
    proxyDescription: "Proxies must be assigned to a monitor to function.",
    pushOptionalParams: "Optional parameters: {0}",
    pushbullet: "Pushbullet",
    pushover: "Pushover",
    pushoverDesc1: "Emergency priority (2) has default 30 second timeout between retries and will expire after 1 hour.",
    pushoverDesc2: "If you want to send notifications to different devices, fill out Device field.",
    pushy: "Pushy",
    pushyAPIKey: "Secret API Key",
    pushyToken: "Device token",
    recent: "Recent",
    records: "records",
    resendDisabled: "Resend disabled",
    resendEveryXTimes: "Resend every {0} times",
    resolverserverDescription: "Cloudflare is the default server. You can change the resolver server anytime.",
    respTime: "Resp. Time (ms)",
    retriesDescription: "Maximum retries before the service is marked as down and a notification is sent",
    retryCheckEverySecond: "Retry every {0} seconds",
    rrtypeDescription: "Select the RR type you want to monitor",
    secureOptionNone: "None / STARTTLS (25, 587)",
    secureOptionTLS: "TLS (465)",
    serwersms: "SerwerSMS.pl",
    serwersmsAPIPassword: "API Password",
    serwersmsAPIUser: "API Username (incl. webapi_ prefix)",
    serwersmsPhoneNumber: "Phone number",
    serwersmsSenderName: "SMS Sender Name (registered via customer portal)",
    setAsDefault: "Set As Default",
    setAsDefaultProxyDescription: "This proxy will be enabled by default for new monitors. You can still disable the proxy separately for each monitor.",
    settingsCertificateExpiry: "TLS Certificate Expiry",
    shrinkDatabaseDescription: "Trigger database VACUUM for SQLite. If your database is created after 1.10.0, AUTO_VACUUM is already enabled and this action is not needed.",
    signal: "Signal",
    signalImportant: "IMPORTANT: You cannot mix groups and numbers in recipients!",
    signedInDisp: "Signed in as {0}",
    signedInDispDisabled: "Auth Disabled.",
    slack: "Slack",
    smtp: "Email (SMTP)",
    smtpBCC: "BCC",
    smtpCC: "CC",
    smtpDkimDesc: "Please refer to the Nodemailer DKIM {0} for usage.",
    smtpDkimDomain: "Domain Name",
    smtpDkimHashAlgo: "Hash Algorithm (Optional)",
    smtpDkimKeySelector: "Key Selector",
    smtpDkimPrivateKey: "Private Key",
    smtpDkimSettings: "DKIM Settings",
    smtpDkimheaderFieldNames: "Header Keys to sign (Optional)",
    smtpDkimskipFields: "Header Keys not to sign (Optional)",
    socket: "Socket",
    stackfield: "Stackfield",
    startOrEndWithOnly: "Start or end with {0} only",
    statusPageNothing: "Nothing here, please add a group or a monitor.",
    steamApiKeyDescription: "For monitoring a Steam Game Server you need a Steam Web-API key. You can register your API key here: ",
    successMessage: "Success Message",
    successMessageExplanation: "MQTT message that will be considered as success",
    supportTelegramChatID: "Support Direct Chat / Group / Channel's Chat ID",
    tcp: "TCP / HTTP",
    teams: "Microsoft Teams",
    telegram: "Telegram",
    tokenValidSettingsMsg: "Token is valid! You can now save the 2FA settings.",
    topic: "Topic",
    topicExplanation: "MQTT topic to monitor",
    trustProxyDescription: "Trust 'X-Forwarded-*' headers. If you want to get the correct client IP and your Uptime Kuma is behind such as Nginx or Apache, you should enable this.",
    twoFAVerifyLabel: "Please enter your token to verify 2FA:",
    upsideDownModeDescription: "Flip the status upside down. If the service is reachable, it is DOWN.",
    warning: "warning",
    wayToCheckSignalURL: "You can check this URL to view how to set one up:",
    wayToGetClickSendSMSToken: "You can get API Username and API Key from {0} .",
    wayToGetCloudflaredURL: "(Download cloudflared from {0})",
    wayToGetDiscordURL: "You can get this by going to Server Settings -> Integrations -> Create Webhook",
    wayToGetLineChannelToken: "First access the {0}, create a provider and channel (Messaging API), then you can get the channel access token and user ID from the above mentioned menu items.",
    wayToGetLineNotifyToken: "You can get an access token from {0}",
    wayToGetPagerDutyKey: "You can get this by going to Service -> Service Directory -> (Select a service) -> Integrations -> Add integration. Here you can search for \"Events API V2\". More info {0}",
    wayToGetTeamsURL: "You can learn how to create a webhook URL {0}.",
    wayToGetTelegramChatID: "You can get your chat ID by sending a message to the bot and going to this URL to view the chat_id:",
    wayToGetTelegramToken: "You can get a token from {0}.",
    webhook: "Webhook",
    webhookFormDataDesc: "{multipart} is good for PHP. The JSON will need to be parsed with {decodeFunction}",
    webhookJsonDesc: "{0} is good for any modern HTTP servers such as Express.js",
};